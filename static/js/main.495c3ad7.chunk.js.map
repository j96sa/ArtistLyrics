{"version":3,"sources":["context/modesContext.js","components/Header.jsx","assets/music0.png","assets/music1.png","assets/music2.png","assets/music3.png","assets/music4.png","assets/music5.png","assets/music6.png","context/ContextResize.js","components/Home.jsx","context/ContextFavorite.js","assets/heart-full.png","components/HoverMessage.jsx","components/FavoritCard.jsx","assets/scroll-top.png","assets/heart.png","components/RenderDataComponent.jsx","components/RenderDataComponentDesktop.jsx","components/MyListRender.jsx","components/MyLIst.jsx","assets/tail-spin.svg","assets/404.svg","components/ErrorResult.jsx","components/SearchResult.jsx","router/Router.js","App.js","reportWebVitals.js","index.js"],"names":["ModesContext","createContext","ModesContextProvider","children","useState","JSON","parse","localStorage","getItem","data","lightMode","setLightMode","Provider","value","Header","off","currentComponent","useContext","className","to","onClick","setItem","stringify","ContextResize","ContextResizeProvider","onDesktop","setOnDesktop","resize","clientWidth","document","documentElement","width","initialWidth","Home","setCurrentComponent","navigate","useNavigate","index","setIndex","artist","song","form","setForm","imgArr","imgMusic0","imgMusic1","imgMusic2","imgMusic3","imgMusic4","imgMusic5","imgMusic6","useEffect","switchInterval","setInterval","length","clearInterval","useLayoutEffect","window","addEventListener","removeEventListener","handleChange","e","target","name","onSubmit","preventDefault","pattern","title","required","onChange","type","placeholder","src","alt","ls","ContextFavorite","ContextFavoriteProvider","list","setList","saved","setSaved","setData","id","find","filter","HoverMessage","classname","message","FavoritCard","nav","setMessage","art","strArtist","onMouseLeave","onMouseEnter","event","stopPropagation","added","RenderDataComponent","path","useLocation","pathname","showScrollButton","setShowScrollButton","showDetails","setShowDetails","lyric","redirect","url","location","href","showScrollTopButton","scrollTop","includes","setTimeout","add","strArtistFanart","strArtistFanart2","strGenre","strStyle","strCountry","intBornYear","intDiedYear","strGender","strTwitter","strWebsite","strFacebook","strBiographyEN","scrollTo","top","behavior","scrollButton","RenderDataComponentDesktop","strArtistBanner","strArtistFanart3","strArtistFanart4","MyListRender","useParams","element","MyLIst","exact","map","ErrorResult","toLowerCase","error","SearchResult","apiResponse","setApiResponse","audioDB","fetch","then","res","json","lyricDB","a","Promise","all","artists","lyrics","idArtist","getData","loader","Router","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.495c3ad7.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst ModesContext = createContext();\r\nexport const ModesContextProvider = ({children})=>{\r\n    const [lightMode, setLightMode] = useState(JSON.parse(localStorage.getItem(\"artistlyricstheme\")) || false);    \r\n\r\n    const data = {lightMode,setLightMode};\r\n    return(<ModesContext.Provider value={data}>{children}</ModesContext.Provider>);\r\n};\r\n//export {ModesContextProvider};\r\nexport default ModesContext;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ModesContext from \"../context/modesContext\";\r\n\r\nexport const Header = ({ off,currentComponent }) => {  \r\n  //context que controla el estado de los modos dark & light\r\n  const {setLightMode,lightMode} = useContext(ModesContext);\r\n  \r\n  const themeHandler = ()=>{\r\n    localStorage.setItem(\"artistlyricstheme\",JSON.stringify(!lightMode));\r\n    setLightMode(!lightMode)\r\n  };\r\n\r\n  return (\r\n    <header className={lightMode ?\"header light-mode\" :\"header\"}>\r\n      <section className=\"header-links\">\r\n        <Link className={currentComponent===\"home\" ?\"active-component\" :\"\"} to=\"/\">Home</Link>\r\n        <Link className={currentComponent===\"my-list\" ?\"active-component\" :\"\"} to=\"/my-list\">My List</Link>\r\n      </section>\r\n\r\n      {!off && (\r\n        <section className=\"mode_button-section\">\r\n          <section className=\"mode-button\">\r\n            <figure onClick={themeHandler}></figure>\r\n          </section>\r\n        </section>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/music0.d99964f8.png\";","export default __webpack_public_path__ + \"static/media/music1.2d8dd5c7.png\";","export default __webpack_public_path__ + \"static/media/music2.e70ea62c.png\";","export default __webpack_public_path__ + \"static/media/music3.4130ab25.png\";","export default __webpack_public_path__ + \"static/media/music4.6851b356.png\";","export default __webpack_public_path__ + \"static/media/music5.aa1e5f1f.png\";","export default __webpack_public_path__ + \"static/media/music6.ca87b17c.png\";","import { createContext, useState } from \"react\";\r\n\r\nconst ContextResize = createContext();\r\nexport const ContextResizeProvider = ({children})=>{\r\n    const [onDesktop, setOnDesktop] = useState(false);\r\n\r\n    const resize = ()=>{\r\n        let {clientWidth} = document.documentElement;\r\n        clientWidth > 1200 ?setOnDesktop(true) :setOnDesktop(false);\r\n    };\r\n    const width = ()=>{\r\n        let initialWidth = document.documentElement.clientWidth;\r\n        initialWidth > 1200 ?setOnDesktop(true) :setOnDesktop(false);\r\n    };\r\n\r\n    let data = {resize,onDesktop,width};\r\n    return(<ContextResize.Provider value={data}>{children}</ContextResize.Provider>);\r\n};\r\n//export {ContextResizeProvider};\r\nexport default ContextResize;","import React, { useContext, useEffect,useLayoutEffect,useState } from \"react\";\r\nimport { Header } from \"./Header\";\r\nimport \"../assets/home.css\";\r\n//imagenes para cambiar en el home\r\nimport imgMusic0 from \"../assets/music0.png\";\r\nimport imgMusic1 from \"../assets/music1.png\";\r\nimport imgMusic2 from \"../assets/music2.png\";\r\nimport imgMusic3 from \"../assets/music3.png\";\r\nimport imgMusic4 from \"../assets/music4.png\";\r\nimport imgMusic5 from \"../assets/music5.png\";\r\nimport imgMusic6 from \"../assets/music6.png\";\r\nimport { useNavigate } from \"react-router\";\r\nimport ModesContext from \"../context/modesContext\";\r\nimport ContextResize from \"../context/ContextResize\";\r\n\r\nexport const Home = ({setCurrentComponent,currentComponent}) => {\r\n  //contenido del form para insertar en el la ruta del navegador para hacer las peticiones a la API\r\n  const navigate = useNavigate();\r\n  //context que controla el estado de los modos dark & light\r\n  const {setLightMode} = useContext(ModesContext);\r\n  //estado para validar si mostrar el contenido del modo Desktop;\r\n  const {width,resize,onDesktop} = useContext(ContextResize);\r\n  //estados para modificar las imagenes del home  \r\n  const [index, setIndex] = useState(0);  \r\n  //\r\n  const [form, setForm] = useState({artist:\"\",song:\"\"});\r\n  //array de imagenes del Home\r\n  const imgArr = [imgMusic0,imgMusic1,imgMusic2,imgMusic3,imgMusic4,imgMusic5,imgMusic6];    \r\n\r\n  \r\n  /* FUNCION PARA CAMBIAR LAS IMAGENES DEL HOME */\r\n  useEffect(() => {\r\n    let switchInterval = setInterval(()=>{\r\n      index<imgArr.length-1\r\n      ?setIndex(index + 1)\r\n      :setIndex(0);\r\n    },5000); \r\n    return()=>clearInterval(switchInterval);\r\n  });\r\n  \r\n\r\n  /* FUNCION PARA MODIFICAR EL CONTENIDO DEL HOME EN DEPENDENCIA DEL MODO EN EL QUE SE ENCUENTRE */\r\n  useLayoutEffect(() => {\r\n    window.addEventListener(\"resize\",resize);\r\n    return()=>window.removeEventListener(\"resize\",resize); \r\n  });\r\n  useEffect(() => {\r\n    width();\r\n    //modificar el link\r\n    setCurrentComponent(\"home\");\r\n    //para desactivar el modo light\r\n    setLightMode(false);\r\n  },[width,setCurrentComponent,setLightMode]);\r\n  \r\n\r\n  /* FUNCIONES CONTROLADORAS DEL FORM */\r\n  const handleChange = (e)=>{\r\n    setForm({...form,[e.target.name]:e.target.value})\r\n  };\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    navigate(`/searchresult/${form.artist}/${form.song}`);\r\n    setForm({artist:\"\",song:\"\"});\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"home\">      \r\n      {/* paso la propiedad off al componente header para remover el boton de los modos dark & light porque en el home no me sirve */}\r\n      <Header off={true} currentComponent={currentComponent}/>\r\n      <div className=\"home-content\">        \r\n\r\n        <section className=\"home-main\">\r\n          <article className=\"home-intro\">\r\n            <p>\r\n              Welcome to ArtistLyrics, feel free to search for information about any\r\n              artist you want, as well as the lyrics of any of their songs. Good\r\n              vibes.\r\n            </p>            \r\n          </article>\r\n\r\n          <form onSubmit={handleSubmit} className=\"home-form\">\r\n            <input pattern=\"^[a-zA-Z0-9\\s]+$\" title=\"only alphanumeric characters are allowed\" required value={form.artist} onChange={handleChange} type=\"text\" name=\"artist\" placeholder=\"artist...?\" />\r\n            <input pattern=\"^[a-zA-Z0-9\\s]+$\" title=\"only alphanumeric characters are allowed\" required value={form.song} onChange={handleChange} type=\"text\" name=\"song\" placeholder=\"song...?\" />          \r\n            <input type=\"submit\" value=\"search\"/>\r\n          </form>          \r\n        </section>\r\n\r\n        {\r\n          onDesktop &&\r\n          <section className=\"home-img\">          \r\n            <img src={imgArr[index]} alt=\"img\" />\r\n          </section>\r\n        }        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { createContext, useEffect, useState } from \"react\";\r\n\r\nconst ls = localStorage;\r\n\r\nconst ContextFavorite = createContext();\r\nexport const ContextFavoriteProvider = ({children})=>{\r\n    \r\n    const [list, setList] = useState(JSON.parse(ls.getItem(\"favorite-list\")) || []);\r\n    const [saved, setSaved] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (data){\r\n            let {id} = data;\r\n            \r\n            let inStore = list.find(e=>e.id === id);\r\n\r\n            if (inStore){\r\n                setList(list.filter(e=>e.id!==id));\r\n                setSaved(false);\r\n            }else{\r\n                setList([...list,data]);\r\n                setSaved(true);\r\n            };                        \r\n        };\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        ls.setItem(\"favorite-list\",JSON.stringify(list));\r\n        setData(null);\r\n    }, [list]);\r\n    \r\n    const value = {saved,setSaved,setData,list,setList};\r\n\r\n    return <ContextFavorite.Provider value={value}>{children}</ContextFavorite.Provider>\r\n};\r\n//export {ContextFavoriteProvider};\r\nexport default ContextFavorite;","export default __webpack_public_path__ + \"static/media/heart-full.9460adc3.png\";","import React from 'react'\r\n\r\nexport const HoverMessage = ({classname,message}) => {\r\n    return (\r\n        <span className={classname}>\r\n            <p>{message}</p>\r\n        </span>\r\n    );\r\n};\r\n","import React, { useContext, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport added from \"../assets/heart-full.png\";\r\nimport ContextFavorite from '../context/ContextFavorite';\r\nimport { HoverMessage } from './HoverMessage';\r\n\r\nexport const FavoritCard = ({e}) => {\r\n    //context \r\n    const {setData} = useContext(ContextFavorite);\r\n    //PARA REDIRECCIONAR AL ELEMENTO\r\n    const nav = useNavigate();\r\n    //\r\n    const [message, setMessage] = useState(false);        \r\n    const {id,art,song} = e;\r\n\r\n    const handleRemoveElement = (event)=>{        \r\n        event.stopPropagation();        \r\n        setData(e);\r\n    };\r\n\r\n    return (\r\n        <div onClick={()=>nav(`/my-list/${id}`)} className='card'>\r\n            <article>\r\n                <p>{art.strArtist}</p>\r\n                <p>{song}</p>\r\n            </article>\r\n            {message && <HoverMessage message={message} classname={\"remove_message\"}/>}            \r\n            <img onMouseLeave={()=>setMessage(false)} onMouseEnter={()=>setMessage(\"remove\")} onClick={handleRemoveElement} src={added} alt=\"fav\" />\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/scroll-top.2dde16b6.png\";","export default __webpack_public_path__ + \"static/media/heart.ccdb8b16.png\";","import React, { useContext, useEffect, useState } from 'react'\r\nimport \"../assets/render-data-component.css\";\r\nimport scrollButton from \"../assets/scroll-top.png\";\r\nimport add from \"../assets/heart.png\"\r\nimport added from \"../assets/heart-full.png\";\r\nimport ContextFavorite from '../context/ContextFavorite';\r\nimport { HoverMessage } from './HoverMessage';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport const RenderDataComponent = ({data}) => {\r\n    \r\n    const nav = useNavigate();\r\n    const path = useLocation().pathname;\r\n    //estado para controlar si el resultado de busqueda esta ya en las favoritas \r\n    const {saved,setSaved,setData} = useContext(ContextFavorite);\r\n    // estado para controlar el boton de Scroll-Top\r\n    const [showScrollButton, setShowScrollButton] = useState(false);\r\n    //constante qeu controla si se mostranran los detalles del artista o no en el modo mobile\r\n    const [showDetails, setShowDetails] = useState(false);    \r\n    //estado par ael mensaje al hacer hover sobre el boton fav\r\n    const [message, setMessage] = useState(false);\r\n    //\r\n    const {id,art,lyric} = data;   \r\n\r\n    \r\n    /* VARIAS FUNCIONALIDADES */\r\n    const handleClickImg = ()=>{        \r\n        //para enviar los datos a guardar en el store al CONTEXT \r\n        setData(data);\r\n\r\n        //validacion para saber si se redicciona al eliminar el elemento de my-list(cuando se elimine desde my-list) \r\n        path.includes(\"/my-list/\") && nav(\"/my-list\");\r\n                \r\n        //funcion para mostrar el mensaje en el boton de añadir a la lista de favoritos\r\n        if(saved){\r\n            setMessage(\"removed from my-list\");\r\n        }else{\r\n            setMessage(\"added to my-list\");\r\n        };\r\n\r\n        setTimeout(() => {\r\n            setMessage(false);\r\n        }, 2000);\r\n    };\r\n    \r\n    /* EFFECT PARA SABER SI EL ELEMENTO ESTA EN MY-LIST */\r\n    useEffect(() => {                  \r\n        localStorage.getItem(\"favorite-list\") && JSON.parse(localStorage.getItem(\"favorite-list\")).find(e=>e.id===id) ?setSaved(true) :setSaved(false);\r\n    }, [data]);\r\n\r\n    // funcion para link externos de las paginas de los artistas\r\n    const redirect = (url)=>{\r\n      window.location.href = `https://${url}`;\r\n    };\r\n\r\n    /* EFFECT PARA MOSTRAR EL SCROLL-TOP BUTTON */\r\n    useEffect(() => {\r\n        const showScrollTopButton = ()=>{\r\n            let {scrollTop} = document.documentElement;\r\n            scrollTop > 1100 ?setShowScrollButton(true) :setShowScrollButton(false); \r\n        };\r\n        window.addEventListener(\"scroll\",showScrollTopButton);\r\n        return()=>window.removeEventListener(\"scroll\",showScrollTopButton);\r\n    });\r\n\r\n\r\n    return (\r\n        <section className=\"render_data_component\">                  \r\n            {message && <HoverMessage message={message} classname={\"message-mobile\"}/>}\r\n            <img onClick={handleClickImg} src={saved ?added :add} alt=\"fav\" />\r\n            <article className=\"data-artist\">\r\n                <h2 className=\"subtitle\">{art.strArtist}</h2>\r\n                <img src={art.strArtistFanart ?art.strArtistFanart :art.strArtistFanart2} alt={art.strArtist} />\r\n                <button onClick={()=>setShowDetails(!showDetails)}>{showDetails?\"hide details\" :\"show details\"}</button>   \r\n                {showDetails && \r\n                    <section className=\"data_artist-details\">\r\n                        <p><span>musical style: </span>{art.strGenre} & {art.strStyle}</p>\r\n                        <p><span>country: </span>{art.strCountry}</p>\r\n                        <p><span>born: </span>{art.intBornYear}{art.intDiedYear && \"-\" + art.intDiedYear}</p>\r\n                        <p><span>gender: </span>{art.strGender}</p>\r\n                        <section className=\"details-socials\">                        \r\n                            <p>socials</p>\r\n                            <section className=\"socials-links\">\r\n                                {art.strTwitter && <button onClick={()=>redirect(art.strTwitter)}>twiter</button>}\r\n                                {art.strWebsite && <button onClick={()=>redirect(art.strWebsite)}>website</button>}\r\n                                {art.strFacebook && <button onClick={()=>redirect(art.strFacebook)}>facebook</button>}\r\n                            </section>\r\n                        </section>\r\n                        <p><span>bio: </span>{art.strBiographyEN}</p>                        \r\n                    </section>\r\n                }\r\n            </article>\r\n            <article className=\"data-song\">\r\n                <h2 className=\"subtitle\">{data.song}</h2>\r\n                <p>{lyric}</p>                \r\n            </article>\r\n            {showScrollButton && <img onClick={()=>window.scrollTo({top:0,behavior:'smooth'})} className=\"scroll-button\" src={scrollButton} alt=\"scroll-button\" />}\r\n        </section>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport scrollButton from \"../assets/scroll-top.png\";\r\nimport \"../assets/render-data-component-desktop.css\";\r\nimport add from \"../assets/heart.png\"\r\nimport added from \"../assets/heart-full.png\";\r\nimport ContextFavorite from '../context/ContextFavorite';\r\nimport { HoverMessage } from './HoverMessage';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport const RenderDataComponentDesktop = ({data}) => {\r\n\r\n    const nav = useNavigate();\r\n    const path = useLocation().pathname;\r\n    //estado para controlar si el resultado de busqueda esta ya en las favoritas \r\n    const {saved,setSaved,setData} = useContext(ContextFavorite);\r\n    // estado para controlar el boton de Scroll-Top\r\n    const [showScrollButton, setShowScrollButton] = useState(false);\r\n    //estado para el mensaje al hacer hover sobre el boton fav\r\n    const [message, setMessage] = useState(false);\r\n    //\r\n    const {id,art,lyric} = data;\r\n\r\n    \r\n    /* EFFECT PARA SABER SI EL ELEMENTO ESTA EN MY-LIST */\r\n    useEffect(() => {                \r\n        localStorage.getItem(\"favorite-list\") && JSON.parse(localStorage.getItem(\"favorite-list\")).find(e=>e.id===id) ?setSaved(true) :setSaved(false);\r\n    }, [data]);\r\n\r\n    // funcion para link externos de las paginas de los artistas\r\n    const redirect = (url)=>{\r\n      window.location.href = `https://${url}`;\r\n    };\r\n\r\n    //funcion para remover el elemento\r\n    const handleRemoveElement = ()=>{\r\n        setData(data);\r\n        //validacion para saber si se redicciona al eliminar el elemento de my-list(cuando se elimine desde my-list)     \r\n        path.includes(\"/my-list/\") && nav(\"/my-list\");\r\n    };\r\n\r\n    //funcion para mostrar el mensaje en el boton de añadir a la lista de favoritos\r\n    const handleMosueEnter = ()=>{\r\n        if(saved){\r\n            setMessage(\"remove from my-list\");\r\n        }else{\r\n            setMessage(\"add to my-list\");\r\n        };\r\n    };    \r\n\r\n    /* EFFECT PARA MOSTRAR EL SCROLL-TOP BUTTON */\r\n    useEffect(() => {\r\n        const showScrollTopButton = ()=>{\r\n            let {scrollTop} = document.documentElement;\r\n            scrollTop > 1100 ?setShowScrollButton(true) :setShowScrollButton(false); \r\n        };\r\n        window.addEventListener(\"scroll\",showScrollTopButton);\r\n        return()=>window.removeEventListener(\"scroll\",showScrollTopButton);\r\n    });\r\n\r\n    return (\r\n        <div className=\"render_data_component-desktop\">\r\n            <section className={saved ?\"data_desktop-header\" :\"data_desktop-header\"}>\r\n                <h2>{art.strArtist}</h2>\r\n                <img onMouseLeave={()=>setMessage(false)} onMouseEnter={handleMosueEnter} onClick={handleRemoveElement} src={saved ?added :add} alt=\"fav\" />\r\n                {message && <HoverMessage message={message} classname={\"hover-message\"}/>}\r\n            </section>\r\n            {art.strArtistBanner && <img src={art.strArtistBanner} alt={art.strArtist} />}\r\n            <section className=\"data_desktop-content\">\r\n                <div className='artist-hero'>\r\n                    <section className=\"data_desktop-artist\">\r\n                        <figure className='artist_img'>\r\n                            {art.strArtistFanart ?<img src={art.strArtistFanart} alt=\"img\" /> :<img src={art.strArtistFanart3} alt=\"img\" />}\r\n                            {art.strArtistFanart2 ?<img src={art.strArtistFanart2} alt=\"img\" /> :<img src={art.strArtistFanart4} alt=\"img\" />}\r\n                        </figure>\r\n                        <section className=\"data_desktop-details\">\r\n                            <p><span>musical style: </span>{art.strGenre} & {art.strStyle}</p>\r\n                            <p><span>country: </span>{art.strCountry}</p>\r\n                            <p><span>born: </span>{art.intBornYear}{art.intDiedYear && \"-\" + art.intDiedYear}</p>\r\n                            <p><span>gender: </span>{art.strGender}</p>\r\n                            <section className=\"details-socials\">                        \r\n                                <p>socials</p>\r\n                                <section className=\"socials-links\">\r\n                                    {art.strTwitter && <button onClick={()=>redirect(art.strTwitter)}>twiter</button>}\r\n                                    {art.strWebsite && <button onClick={()=>redirect(art.strWebsite)}>website</button>}\r\n                                    {art.strFacebook && <button onClick={()=>redirect(art.strFacebook)}>facebook</button>}\r\n                                </section>\r\n                            </section>\r\n                        </section>\r\n                    </section>\r\n                    <section className=\"data_desktop-lyric\">\r\n                        <article>\r\n                            <h2>{data.song}</h2>\r\n                            <p>{lyric}</p>\r\n                        </article>\r\n                    </section>\r\n                </div>\r\n                <section className=\"data_desktop-biography\">\r\n                    <h2>Biography</h2>\r\n                    <p>{art.strBiographyEN}</p>\r\n                </section>\r\n                {showScrollButton && <img onClick={()=>window.scrollTo({top:0,behavior:'smooth'})} className=\"scroll-button\" src={scrollButton} alt=\"scroll-button\" />}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useLayoutEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport ContextResize from '../context/ContextResize'\r\nimport { RenderDataComponent } from './RenderDataComponent';\r\nimport { RenderDataComponentDesktop } from './RenderDataComponentDesktop';\r\n\r\n\r\nexport const MyListRender = () => {\r\n    //\r\n    const {id} = useParams();\r\n    //context\r\n    const {onDesktop,width,resize} = useContext(ContextResize);\r\n    //\r\n    const element = JSON.parse(localStorage.getItem(\"favorite-list\")).find(e=>e.id===id);        \r\n\r\n    useLayoutEffect(() => {\r\n        width();\r\n        window.addEventListener(\"resize\",resize);\r\n        return()=>{window.removeEventListener(\"resize\",resize)};\r\n    },[]);\r\n\r\n    return (\r\n        <>                \r\n        {onDesktop ?<RenderDataComponentDesktop data={element} /> :<RenderDataComponent data={element} />}\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Header } from './Header'\r\nimport \"../assets/my-list.css\";\r\nimport ModesContext from '../context/modesContext';\r\nimport ContextFavorite from '../context/ContextFavorite';\r\nimport { FavoritCard } from './FavoritCard';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { MyListRender } from './MyListRender';\r\n\r\nexport const MyLIst = ({setCurrentComponent,currentComponent}) => {\r\n    //context para controlar el THEMA\r\n    const {lightMode,setLightMode} = useContext(ModesContext);\r\n    //context para la funcionalidad de eliminar & mostrar los elementos fav\r\n    const {list} = useContext(ContextFavorite);\r\n\r\n    useEffect(() => {\r\n        //modificar el link\r\n        setCurrentComponent(\"my-list\");\r\n        //para establecer el ultimo modo guardado en el localstorage\r\n        setLightMode(JSON.parse(localStorage.getItem(\"artistlyricstheme\")));\r\n    }, [setCurrentComponent])\r\n\r\n\r\n    return (\r\n        <div className={lightMode ?\"my-list light-mode\" :\"my-list\"}>            \r\n            <Header currentComponent={currentComponent}/>  \r\n            <Routes>                \r\n                <Route exact path=\"/\" element={\r\n                    <section className='list-cards'>\r\n                        {list.map(e=><FavoritCard key={e.id} e={e}/>)}\r\n                    </section>                                    \r\n                }/>\r\n                <Route exact path=\"/:id\" element={<MyListRender/>} />\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/tail-spin.19dcc6dd.svg\";","export default __webpack_public_path__ + \"static/media/404.db5ada9f.svg\";","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport error from \"../assets/404.svg\";\r\n\r\nexport const ErrorResult = () => {\r\n    const {artist,song} = useParams();\r\n    return (\r\n        <div className=\"error-result\">\r\n            <p>Sorry, no matches were found for the song \"<span>{song.toLowerCase()}</span>\" by artist <span>{artist.toLowerCase()}</span>.</p>\r\n            <img src={error} alt=\"error\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useLayoutEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Header } from './Header';\r\nimport \"../assets/searchresult.css\";\r\nimport ModesContext from '../context/modesContext';\r\nimport { RenderDataComponent } from './RenderDataComponent';\r\nimport loader from \"../assets/tail-spin.svg\";\r\nimport ContextResize from '../context/ContextResize';\r\nimport { RenderDataComponentDesktop } from './RenderDataComponentDesktop';\r\nimport { ErrorResult } from './ErrorResult';\r\n\r\n\r\nexport const SearchResult = () => {\r\n    //context que controla el estado de los modos dark & light\r\n    const {lightMode,setLightMode} = useContext(ModesContext);\r\n    //variables para guardar los datos retornados de la API como un objeto    \r\n    const [apiResponse, setApiResponse] = useState(null);\r\n    //variable que guarda los valores a buscar en la API\r\n    let {artist,song} = useParams();    \r\n    //context para controlar el modo en que se encuetra la apliacion\r\n    let {onDesktop,resize,width} = useContext(ContextResize);\r\n\r\n    /* EFFECTO PARA CARGAR EL ULTIMO MODO GUARDADO EN EL localstorage */\r\n    useEffect(() => {\r\n        setLightMode(JSON.parse(localStorage.getItem(\"artistlyricstheme\")));\r\n    }, []);\r\n\r\n    /* EFFECT PARA CONTROLAR EN QUE TIPO DE DISPOSITIVO SE ENCUENTRA */\r\n    useLayoutEffect(() => {\r\n        window.addEventListener(\"resize\",resize);\r\n        return()=>window.removeEventListener(\"resize\",resize);   \r\n    });\r\n    useEffect(() => {\r\n        width();\r\n    },[width]);\r\n\r\n\r\n    /* EFFECTO PARA OBTENER LOS DATOS DE LA BUSQUEDA */\r\n    useEffect(() => {\r\n        const audioDB = fetch(`https://theaudiodb.com/api/v1/json/2/search.php?s=${artist}`).then(res=>res.json()),\r\n        lyricDB = fetch(`https://api.lyrics.ovh/v1/${artist}/${song}`).then(res=>res.json());\r\n        const getData = async()=>{\r\n            const res = await Promise.all([audioDB,lyricDB]),\r\n            art = res[0].artists ?res[0].artists[0] :res[0].artists,\r\n            lyric = res[1].lyrics ?res[1].lyrics :null,\r\n            id = (art && lyric) ?art.idArtist+(artist+song).toLowerCase() :null;\r\n            setApiResponse({id,art,lyric,song});\r\n        };\r\n        getData();\r\n    }, [artist,song]);\r\n    \r\n    return (        \r\n        <div className={lightMode ?\"search-result light-mode\" :\"search-result\"}>            \r\n            <Header/>                        \r\n            {apiResponse             \r\n            ?(\r\n                (apiResponse.id) \r\n                ?(onDesktop ?<RenderDataComponentDesktop data={apiResponse}/> :<RenderDataComponent data={apiResponse}/>)\r\n                :<ErrorResult/>\r\n            )\r\n            \r\n            :(\r\n                <section className=\"loader-section\">\r\n                    <img src={loader} alt=\"loader\"/>\r\n                </section>\r\n            )}            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport { Home } from \"../components/Home\";\r\nimport { MyLIst } from \"../components/MyLIst\";\r\nimport { SearchResult } from \"../components/SearchResult\";\r\nimport { ContextFavoriteProvider } from \"../context/ContextFavorite\";\r\nimport { ContextResizeProvider } from \"../context/ContextResize\";\r\nimport { ModesContextProvider } from \"../context/modesContext\";\r\n\r\nexport const Router = () => {\r\n  //variable para controlar cual es el componente activo(en vista) y modificar el elemento link en el compoente HEADER\r\n  const [currentComponent, setCurrentComponent] = useState(\"home\");\r\n\r\n  return (\r\n    <HashRouter>\r\n      <ContextFavoriteProvider>\r\n      <ModesContextProvider>\r\n      <ContextResizeProvider>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Home setCurrentComponent={setCurrentComponent} currentComponent={currentComponent}/>} />\r\n          <Route exact path=\"/searchresult/:artist/:song\" element={<SearchResult/>} />\r\n          <Route path=\"/my-list/*\" element={<MyLIst setCurrentComponent={setCurrentComponent} currentComponent={currentComponent}/>}/>          \r\n        </Routes>\r\n      </ContextResizeProvider>\r\n      </ModesContextProvider>\r\n      </ContextFavoriteProvider>\r\n    </HashRouter>\r\n  );\r\n};\r\n","import './App.css';\r\nimport { Router } from './router/Router';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}