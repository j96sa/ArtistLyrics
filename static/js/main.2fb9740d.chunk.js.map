{"version":3,"sources":["context/modesContext.js","components/Header.jsx","assets/music0.png","assets/music1.png","assets/music2.png","assets/music3.png","assets/music4.png","assets/music5.png","assets/music6.png","context/ContextResize.js","components/Home.jsx","context/ContextFavorite.js","assets/heart-full.png","components/HoverMessage.jsx","components/FavoritCard.jsx","assets/scroll-top.png","assets/heart.png","components/RenderDataComponent.jsx","components/RenderDataComponentDesktop.jsx","components/MyListRender.jsx","components/MyLIst.jsx","assets/tail-spin.svg","assets/404.svg","components/ErrorResult.jsx","components/SearchResult.jsx","router/Router.js","App.js","reportWebVitals.js","index.js"],"names":["ModesContext","createContext","ModesContextProvider","children","useState","JSON","parse","localStorage","getItem","data","lightMode","setLightMode","Provider","value","Header","off","currentComponent","useContext","className","to","onClick","setItem","stringify","ContextResize","ContextResizeProvider","onDesktop","setOnDesktop","resize","clientWidth","document","documentElement","width","initialWidth","Home","setCurrentComponent","index","setIndex","imgArr","imgMusic0","imgMusic1","imgMusic2","imgMusic3","imgMusic4","imgMusic5","imgMusic6","navigate","useNavigate","artist","song","form","setForm","useEffect","switchInterval","setInterval","length","clearInterval","window","addEventListener","removeEventListener","handleChange","e","target","name","onSubmit","preventDefault","pattern","title","required","onChange","type","placeholder","src","alt","ls","ContextFavorite","ContextFavoriteProvider","list","setList","saved","setSaved","setData","id","find","filter","HoverMessage","classname","message","FavoritCard","setMessage","art","nav","strArtist","onMouseLeave","onMouseEnter","event","stopPropagation","added","RenderDataComponent","lyric","showScrollButton","setShowScrollButton","showDetails","setShowDetails","redirect","url","location","href","showScrollTopButton","scrollTop","setTimeout","add","strArtistFanart","strArtistFanart2","strGenre","strStyle","strCountry","intBornYear","intDiedYear","strGender","strTwitter","strWebsite","strFacebook","strBiographyEN","scrollTo","top","behavior","scrollButton","RenderDataComponentDesktop","strArtistBanner","strArtistFanart3","strArtistFanart4","MyListRender","useParams","element","item","MyLIst","exact","path","map","ErrorResult","toLowerCase","error","SearchResult","apiResponse","setApiResponse","audioDB","fetch","then","res","json","lyricDB","a","Promise","all","artists","lyrics","idArtist","getData","loader","Router","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2fb9740d.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst ModesContext = createContext();\r\nconst ModesContextProvider = ({children})=>{\r\n    const [lightMode, setLightMode] = useState(JSON.parse(localStorage.getItem(\"artistlyricstheme\")) || false);    \r\n\r\n    const data = {lightMode,setLightMode};\r\n    return(<ModesContext.Provider value={data}>{children}</ModesContext.Provider>);\r\n};\r\nexport {ModesContextProvider};\r\nexport default ModesContext;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ModesContext from \"../context/modesContext\";\r\n\r\nexport const Header = ({ off,currentComponent }) => {  \r\n  //context que controla el estado de los modos dark & light\r\n  const {setLightMode,lightMode} = useContext(ModesContext);\r\n  \r\n  const themeHandler = ()=>{\r\n    localStorage.setItem(\"artistlyricstheme\",JSON.stringify(!lightMode));\r\n    setLightMode(!lightMode)\r\n  };\r\n\r\n  return (\r\n    <header className={lightMode ?\"header light-mode\" :\"header\"}>\r\n      <section className=\"header-links\">\r\n        <Link className={currentComponent===\"home\" ?\"active-component\" :\"\"} to=\"/\">Home</Link>\r\n        <Link className={currentComponent===\"my-list\" ?\"active-component\" :\"\"} to=\"/my-list\">My List</Link>\r\n      </section>\r\n\r\n      {!off && (\r\n        <section className=\"mode_button-section\">\r\n          <section className=\"mode-button\">\r\n            <figure onClick={themeHandler}></figure>\r\n          </section>\r\n        </section>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/music0.d99964f8.png\";","export default __webpack_public_path__ + \"static/media/music1.2d8dd5c7.png\";","export default __webpack_public_path__ + \"static/media/music2.e70ea62c.png\";","export default __webpack_public_path__ + \"static/media/music3.4130ab25.png\";","export default __webpack_public_path__ + \"static/media/music4.6851b356.png\";","export default __webpack_public_path__ + \"static/media/music5.aa1e5f1f.png\";","export default __webpack_public_path__ + \"static/media/music6.ca87b17c.png\";","import { createContext, useState } from \"react\";\r\n\r\nconst ContextResize = createContext();\r\nconst ContextResizeProvider = ({children})=>{\r\n    const [onDesktop, setOnDesktop] = useState(false);\r\n\r\n    const resize = ()=>{\r\n        let {clientWidth} = document.documentElement;\r\n        clientWidth > 1200 ?setOnDesktop(true) :setOnDesktop(false);\r\n    };\r\n    const width = ()=>{\r\n        let initialWidth = document.documentElement.clientWidth;\r\n        initialWidth > 1200 ?setOnDesktop(true) :setOnDesktop(false);\r\n    };\r\n\r\n    let data = {resize,onDesktop,width};\r\n    return(<ContextResize.Provider value={data}>{children}</ContextResize.Provider>);\r\n};\r\nexport {ContextResizeProvider};\r\nexport default ContextResize;","import React, { useContext, useEffect,useState } from \"react\";\r\nimport { Header } from \"./Header\";\r\nimport \"../assets/home.css\";\r\n//imagenes para cambiar en el home\r\nimport imgMusic0 from \"../assets/music0.png\";\r\nimport imgMusic1 from \"../assets/music1.png\";\r\nimport imgMusic2 from \"../assets/music2.png\";\r\nimport imgMusic3 from \"../assets/music3.png\";\r\nimport imgMusic4 from \"../assets/music4.png\";\r\nimport imgMusic5 from \"../assets/music5.png\";\r\nimport imgMusic6 from \"../assets/music6.png\";\r\nimport { useNavigate } from \"react-router\";\r\nimport ModesContext from \"../context/modesContext\";\r\nimport ContextResize from \"../context/ContextResize\";\r\n\r\nexport const Home = ({setCurrentComponent,currentComponent}) => {\r\n  //context que controla el estado de los modos dark & light\r\n  const {setLightMode} = useContext(ModesContext);\r\n  //estado para validar si mostrar el contenido del modo Desktop;\r\n  const {width,resize,onDesktop} = useContext(ContextResize);\r\n  //estados para modificar las imagenes del home  \r\n  const [index, setIndex] = useState(0);  \r\n  //array de imagenes del Home\r\n  const imgArr = [imgMusic0,imgMusic1,imgMusic2,imgMusic3,imgMusic4,imgMusic5,imgMusic6];    \r\n  //contenido del form para insertar en el la ruta del navegador para hacer las peticiones a la API\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState({artist:\"\",song:\"\"});\r\n\r\n  \r\n  /* FUNCION PARA CAMBIAR LAS IMAGENES DEL HOME */\r\n  useEffect(() => {\r\n    let switchInterval = setInterval(()=>{\r\n      index<imgArr.length-1\r\n      ?setIndex(index + 1)\r\n      :setIndex(0);\r\n    },5000); \r\n    return()=>clearInterval(switchInterval);\r\n  });\r\n  \r\n\r\n  /* FUNCION PARA MODIFICAR EL CONTENIDO DEL HOME EN DEPENDENCIA DEL MODO EN EL QUE SE ENCUENTRE */\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\",resize);\r\n    return()=>window.removeEventListener(\"resize\",resize); \r\n  });\r\n  useEffect(() => {\r\n    width();\r\n    //modificar el link\r\n    setCurrentComponent(\"home\");\r\n    //para desactivar el modo light\r\n    setLightMode(false);\r\n  },[width,setCurrentComponent,setLightMode]);\r\n  \r\n\r\n  /* FUNCIONES CONTROLADORAS DEL FORM */\r\n  const handleChange = (e)=>{\r\n    setForm({...form,[e.target.name]:e.target.value})\r\n  };\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    navigate(`/searchresult/${form.artist}/${form.song}`);\r\n    setForm({artist:\"\",song:\"\"});\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"home\">      \r\n      {/* paso la propiedad off al componente header para remover el boton de los modos dark & light porque en el home no me sirve */}\r\n      <Header off={true} currentComponent={currentComponent}/>\r\n      <div className=\"home-content\">        \r\n\r\n        <section className=\"home-main\">\r\n          <article className=\"home-intro\">\r\n            <p>\r\n              Welcome to ArtistLyrics, feel free to search for information about any\r\n              artist you want, as well as the lyrics of any of their songs. Good\r\n              vibes.\r\n            </p>            \r\n          </article>\r\n\r\n          <form onSubmit={handleSubmit} className=\"home-form\">\r\n            <input pattern=\"^[a-zA-Z0-9\\s]+$\" title=\"only alphanumeric characters are allowed\" required value={form.artist} onChange={handleChange} type=\"text\" name=\"artist\" placeholder=\"artist...?\" />\r\n            <input pattern=\"^[a-zA-Z0-9\\s]+$\" title=\"only alphanumeric characters are allowed\" required value={form.song} onChange={handleChange} type=\"text\" name=\"song\" placeholder=\"song...?\" />          \r\n            <input type=\"submit\" value=\"search\"/>\r\n          </form>          \r\n        </section>\r\n\r\n        {\r\n          onDesktop &&\r\n          <section className=\"home-img\">          \r\n            <img src={imgArr[index]} alt=\"img\" />\r\n          </section>\r\n        }        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { createContext, useEffect, useState } from \"react\";\r\n\r\nconst ls = localStorage;\r\n\r\nconst ContextFavorite = createContext();\r\nconst ContextFavoriteProvider = ({children})=>{\r\n    \r\n    const [list, setList] = useState(JSON.parse(ls.getItem(\"favorite-list\")) || []);\r\n    const [saved, setSaved] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (data){\r\n            let {id} = data;\r\n            \r\n            let inStore = list.find(e=>e.id === id);\r\n\r\n            if (inStore){\r\n                setList(list.filter(e=>e.id!==id));\r\n                setSaved(false);\r\n            }else{\r\n                setList([...list,data]);\r\n                setSaved(true);\r\n            };                        \r\n        };\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        ls.setItem(\"favorite-list\",JSON.stringify(list));\r\n        setData(null);\r\n    }, [list]);\r\n    \r\n    const value = {saved,setSaved,setData,list,setList};\r\n\r\n    return <ContextFavorite.Provider value={value}>{children}</ContextFavorite.Provider>\r\n};\r\nexport {ContextFavoriteProvider};\r\nexport default ContextFavorite;","export default __webpack_public_path__ + \"static/media/heart-full.9460adc3.png\";","import React from 'react'\r\n\r\nexport const HoverMessage = ({classname,message}) => {\r\n    return (\r\n        <span className={classname}>\r\n            <p>{message}</p>\r\n        </span>\r\n    );\r\n};\r\n","import React, { useContext, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport added from \"../assets/heart-full.png\";\r\nimport ContextFavorite from '../context/ContextFavorite';\r\nimport { HoverMessage } from './HoverMessage';\r\n\r\nexport const FavoritCard = ({e}) => {\r\n    const [message, setMessage] = useState(false);        \r\n    const {id,art,song} = e;\r\n    //context \r\n    const {setData} = useContext(ContextFavorite);\r\n    //PARA REDIRECCIONAR AL ELEMENTO\r\n    const nav = useNavigate();\r\n\r\n    const handleRemoveElement = (event)=>{        \r\n        event.stopPropagation();\r\n        //event.nativeEvent.stopImmediatePropagation();\r\n        setData(e);\r\n    };\r\n\r\n    return (\r\n        <div onClick={()=>nav(`/my-list/${id}`)} className='card'>\r\n            <article>\r\n                <p>{art.strArtist}</p>\r\n                <p>{song}</p>\r\n            </article>\r\n            {message && <HoverMessage message={message} classname={\"remove_message\"}/>}            \r\n            <img onMouseLeave={()=>setMessage(false)} onMouseEnter={()=>setMessage(\"remove\")} onClick={handleRemoveElement} src={added} alt=\"fav\" />\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/scroll-top.2dde16b6.png\";","export default __webpack_public_path__ + \"static/media/heart.ccdb8b16.png\";","import React, { useContext, useEffect, useState } from 'react'\r\nimport \"../assets/render-data-component.css\";\r\nimport scrollButton from \"../assets/scroll-top.png\";\r\nimport add from \"../assets/heart.png\"\r\nimport added from \"../assets/heart-full.png\";\r\nimport ContextFavorite from '../context/ContextFavorite';\r\nimport { HoverMessage } from './HoverMessage';\r\n\r\n\r\nexport const RenderDataComponent = ({data}) => {\r\n    const {id,art,lyric} = data;\r\n    // estado para controlar el boton de Scroll-Top\r\n    const [showScrollButton, setShowScrollButton] = useState(false);\r\n    //constante qeu controla si se mostranran los detalles del artista o no en el modo mobile\r\n    const [showDetails, setShowDetails] = useState(false);    \r\n    //estado para controlar si el resultado de busqueda esta ya en las favoritas \r\n    const {saved,setSaved,setData} = useContext(ContextFavorite);\r\n    //estado par ael mensaje al hacer hover sobre el boton fav\r\n    const [message, setMessage] = useState(false);\r\n\r\n    /* VARIAS FUNCIONALIDADES */\r\n    const handleClickImg = ()=>{\r\n        //para enviar los datos a guardar en el store al CONTEXT \r\n        setData(data);\r\n\r\n        //funcion para mostrar el mensaje en el boton de añadir a la lista de favoritos\r\n        if(saved){\r\n            setMessage(\"removed from my-list\");\r\n        }else{\r\n            setMessage(\"added to my-list\");\r\n        };\r\n\r\n        setTimeout(() => {\r\n            setMessage(false);\r\n        }, 2000);\r\n    };\r\n    \r\n    /* EFFECT PARA SABER SI EL ELEMENTO ESTA EN MY-LIST */\r\n    useEffect(() => {                  \r\n        localStorage.getItem(\"favorite-list\") && JSON.parse(localStorage.getItem(\"favorite-list\")).find(e=>e.id===id) ?setSaved(true) :setSaved(false);\r\n    }, [data]);\r\n\r\n    // funcion para link externos de las paginas de los artistas\r\n    const redirect = (url)=>{\r\n      window.location.href = `https://${url}`;\r\n    };\r\n\r\n    /* EFFECT PARA MOSTRAR EL SCROLL-TOP BUTTON */\r\n    useEffect(() => {\r\n        const showScrollTopButton = ()=>{\r\n            let {scrollTop} = document.documentElement;\r\n            scrollTop > 1100 ?setShowScrollButton(true) :setShowScrollButton(false); \r\n        };\r\n        window.addEventListener(\"scroll\",showScrollTopButton);\r\n        return()=>window.removeEventListener(\"scroll\",showScrollTopButton);\r\n    });\r\n\r\n\r\n    return (\r\n        <section className=\"render_data_component\">                  \r\n            {message && <HoverMessage message={message} classname={\"message-mobile\"}/>}\r\n            <img onClick={handleClickImg} src={saved ?added :add} alt=\"fav\" />\r\n            <article className=\"data-artist\">\r\n                <h2 className=\"subtitle\">{art.strArtist}</h2>\r\n                <img src={art.strArtistFanart ?art.strArtistFanart :art.strArtistFanart2} alt={art.strArtist} />\r\n                <button onClick={()=>setShowDetails(!showDetails)}>{showDetails?\"hide details\" :\"show more details\"}</button>   \r\n                {showDetails && \r\n                    <section className=\"data_artist-details\">\r\n                        <p><span>musical style: </span>{art.strGenre} & {art.strStyle}</p>\r\n                        <p><span>country: </span>{art.strCountry}</p>\r\n                        <p><span>born: </span>{art.intBornYear}{art.intDiedYear && \"-\" + art.intDiedYear}</p>\r\n                        <p><span>gender: </span>{art.strGender}</p>\r\n                        <section className=\"details-socials\">                        \r\n                            <p>socials</p>\r\n                            <section className=\"socials-links\">\r\n                                {art.strTwitter && <button onClick={()=>redirect(art.strTwitter)}>twiter</button>}\r\n                                {art.strWebsite && <button onClick={()=>redirect(art.strWebsite)}>website</button>}\r\n                                {art.strFacebook && <button onClick={()=>redirect(art.strFacebook)}>facebook</button>}\r\n                            </section>\r\n                        </section>\r\n                        <p><span>bio: </span>{art.strBiographyEN}</p>                        \r\n                    </section>\r\n                }\r\n            </article>\r\n            <article className=\"data-song\">\r\n                <h2 className=\"subtitle\">{data.song}</h2>\r\n                <p>{lyric}</p>                \r\n            </article>\r\n            {showScrollButton && <img onClick={()=>window.scrollTo({top:0,behavior:'smooth'})} className=\"scroll-button\" src={scrollButton} alt=\"scroll-button\" />}\r\n        </section>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport scrollButton from \"../assets/scroll-top.png\";\r\nimport \"../assets/render-data-component-desktop.css\";\r\nimport add from \"../assets/heart.png\"\r\nimport added from \"../assets/heart-full.png\";\r\nimport ContextFavorite from '../context/ContextFavorite';\r\nimport { HoverMessage } from './HoverMessage';\r\n\r\nexport const RenderDataComponentDesktop = ({data}) => {\r\n    const {id,art,lyric} = data;\r\n    // estado para controlar el boton de Scroll-Top\r\n    const [showScrollButton, setShowScrollButton] = useState(false);\r\n    //estado para controlar si el resultado de busqueda esta ya en las favoritas \r\n    const {saved,setSaved,setData} = useContext(ContextFavorite);\r\n    //estado par ael mensaje al hacer hover sobre el boton fav\r\n    const [message, setMessage] = useState(false);\r\n\r\n    \r\n    /* EFFECT PARA SABER SI EL ELEMENTO ESTA EN MY-LIST */\r\n    useEffect(() => {                \r\n        localStorage.getItem(\"favorite-list\") && JSON.parse(localStorage.getItem(\"favorite-list\")).find(e=>e.id===id) ?setSaved(true) :setSaved(false);\r\n    }, [data]);\r\n\r\n    // funcion para link externos de las paginas de los artistas\r\n    const redirect = (url)=>{\r\n      window.location.href = `https://${url}`;\r\n    };\r\n\r\n    //funcion para mostrar el mensaje en el boton de añadir a la lista de favoritos\r\n    const handleMosueEnter = ()=>{\r\n        if(saved){\r\n            setMessage(\"remove from my-list\");\r\n        }else{\r\n            setMessage(\"add to my-list\");\r\n        };\r\n    };    \r\n\r\n    /* EFFECT PARA MOSTRAR EL SCROLL-TOP BUTTON */\r\n    useEffect(() => {\r\n        const showScrollTopButton = ()=>{\r\n            let {scrollTop} = document.documentElement;\r\n            scrollTop > 1100 ?setShowScrollButton(true) :setShowScrollButton(false); \r\n        };\r\n        window.addEventListener(\"scroll\",showScrollTopButton);\r\n        return()=>window.removeEventListener(\"scroll\",showScrollTopButton);\r\n    });\r\n    \r\n\r\n    return (\r\n        <div className=\"render_data_component-desktop\">\r\n            <section className={saved ?\"data_desktop-header\" :\"data_desktop-header\"}>\r\n                <h2>{art.strArtist}</h2>\r\n                <img onMouseLeave={()=>setMessage(false)} onMouseEnter={handleMosueEnter} onClick={()=>setData(data)} src={saved ?added :add} alt=\"fav\" />\r\n                {message && <HoverMessage message={message} classname={\"hover-message\"}/>}\r\n            </section>\r\n            {art.strArtistBanner && <img src={art.strArtistBanner} alt={art.strArtist} />}\r\n            <section className=\"data_desktop-content\">\r\n                <section className=\"data_desktop-artist\">\r\n                    {art.strArtistFanart ?<img src={art.strArtistFanart} alt=\"img\" /> :<img src={art.strArtistFanart3} alt=\"img\" />}\r\n                    {art.strArtistFanart2 ?<img src={art.strArtistFanart2} alt=\"img\" /> :<img src={art.strArtistFanart4} alt=\"img\" />}\r\n                    <section className=\"data_desktop-details\">\r\n                        <p><span>musical style: </span>{art.strGenre} & {art.strStyle}</p>\r\n                        <p><span>country: </span>{art.strCountry}</p>\r\n                        <p><span>born: </span>{art.intBornYear}{art.intDiedYear && \"-\" + art.intDiedYear}</p>\r\n                        <p><span>gender: </span>{art.strGender}</p>\r\n                        <section className=\"details-socials\">                        \r\n                            <p>socials</p>\r\n                            <section className=\"socials-links\">\r\n                                {art.strTwitter && <button onClick={()=>redirect(art.strTwitter)}>twiter</button>}\r\n                                {art.strWebsite && <button onClick={()=>redirect(art.strWebsite)}>website</button>}\r\n                                {art.strFacebook && <button onClick={()=>redirect(art.strFacebook)}>facebook</button>}\r\n                            </section>\r\n                        </section>\r\n                    </section>\r\n                </section>\r\n                <section className=\"data_desktop-lyric\">\r\n                    <article>\r\n                        <h2>{data.song}</h2>\r\n                        <p>{lyric}</p>\r\n                    </article>\r\n                </section>\r\n                <section className=\"data_desktop-biography\">\r\n                    <h2>Biography</h2>\r\n                    <p>{art.strBiographyEN}</p>\r\n                </section>\r\n                {showScrollButton && <img onClick={()=>window.scrollTo({top:0,behavior:'smooth'})} className=\"scroll-button\" src={scrollButton} alt=\"scroll-button\" />}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport ContextResize from '../context/ContextResize'\r\nimport { RenderDataComponent } from './RenderDataComponent';\r\nimport { RenderDataComponentDesktop } from './RenderDataComponentDesktop';\r\n\r\n\r\nexport const MyListRender = () => {\r\n    const {onDesktop,width,resize} = useContext(ContextResize);\r\n    const {id} = useParams();\r\n    const element = JSON.parse(localStorage.getItem(\"favorite-list\")).find(e=>e.id===id);\r\n    const [item] = useState(element);\r\n\r\n    useEffect(() => {\r\n        width();\r\n        window.addEventListener(\"resize\",resize);\r\n        return()=>{window.removeEventListener(\"resize\",resize)};\r\n    },[]);\r\n\r\n    return (\r\n        <>                \r\n        {onDesktop ?<RenderDataComponentDesktop data={item} /> :<RenderDataComponent data={item} />}\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Header } from './Header'\r\nimport \"../assets/my-list.css\";\r\nimport ModesContext from '../context/modesContext';\r\nimport ContextFavorite from '../context/ContextFavorite';\r\nimport { FavoritCard } from './FavoritCard';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { MyListRender } from './MyListRender';\r\n\r\nexport const MyLIst = ({setCurrentComponent,currentComponent}) => {\r\n    //context para controlar el THEMA\r\n    const {lightMode,setLightMode} = useContext(ModesContext);\r\n    //context para la funcionalidad de eliminar & mostrar los elementos fav\r\n    const {list} = useContext(ContextFavorite);\r\n\r\n    useEffect(() => {\r\n        //modificar el link\r\n        setCurrentComponent(\"my-list\");\r\n        //para establecer el ultimo modo guardado en el localstorage\r\n        setLightMode(JSON.parse(localStorage.getItem(\"artistlyricstheme\")));\r\n    }, [setCurrentComponent])\r\n\r\n\r\n    return (\r\n        <div className={lightMode ?\"my-list light-mode\" :\"my-list\"}>            \r\n            <Header currentComponent={currentComponent}/>  \r\n            <Routes>                \r\n                <Route exact path=\"/\" element={\r\n                    <section className='list-cards'>\r\n                        {list.map(e=><FavoritCard key={e.id} e={e}/>)}\r\n                    </section>                                    \r\n                }/>\r\n                <Route exact path=\"/:id\" element={<MyListRender/>} />\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/tail-spin.19dcc6dd.svg\";","export default __webpack_public_path__ + \"static/media/404.db5ada9f.svg\";","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport error from \"../assets/404.svg\";\r\n\r\nexport const ErrorResult = () => {\r\n    let {artist,song} = useParams();\r\n    return (\r\n        <div className=\"error-result\">\r\n            <p>Sorry, no matches were found for the song \"<span>{song.toLowerCase()}</span>\" by artist <span>{artist.toLowerCase()}</span>.</p>\r\n            <img src={error} alt=\"error\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Header } from './Header';\r\nimport \"../assets/searchresult.css\";\r\nimport ModesContext from '../context/modesContext';\r\nimport { RenderDataComponent } from './RenderDataComponent';\r\nimport loader from \"../assets/tail-spin.svg\";\r\nimport ContextResize from '../context/ContextResize';\r\nimport { RenderDataComponentDesktop } from './RenderDataComponentDesktop';\r\nimport { ErrorResult } from './ErrorResult';\r\n\r\n\r\nexport const SearchResult = () => {\r\n    //context que controla el estado de los modos dark & light\r\n    const {lightMode,setLightMode} = useContext(ModesContext);\r\n    //variables para guardar los datos retornados de la API como un objeto    \r\n    const [apiResponse, setApiResponse] = useState(null);\r\n    //variable que guarda los valores a buscar en la API\r\n    let {artist,song} = useParams();    \r\n    //context para controlar el modo en que se encuetra la apliacion\r\n    let {onDesktop,resize,width} = useContext(ContextResize);\r\n\r\n    /* EFFECTO PARA CARGAR EL ULTIMO MODO GUARDADO EN EL localstorage */\r\n    useEffect(() => {\r\n        setLightMode(JSON.parse(localStorage.getItem(\"artistlyricstheme\")));\r\n    }, []);\r\n\r\n    /* EFFECT PARA CONTROLAR EN QUE TIPO DE DISPOSITIVO SE ENCUENTRA */\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\",resize);\r\n        return()=>window.removeEventListener(\"resize\",resize);   \r\n    });\r\n    useEffect(() => {\r\n        width();\r\n    },[width]);\r\n\r\n\r\n    /* EFFECTO PARA OBTENER LOS DATOS DE LA BUSQUEDA */\r\n    useEffect(() => {\r\n        let audioDB = fetch(`https://theaudiodb.com/api/v1/json/2/search.php?s=${artist}`).then(res=>res.json());\r\n        let lyricDB = fetch(`https://api.lyrics.ovh/v1/${artist}/${song}`).then(res=>res.json());\r\n        const getData = async()=>{\r\n            let res = await Promise.all([audioDB,lyricDB]);                       \r\n            let art = res[0].artists ?res[0].artists[0] :res[0].artists;\r\n            let lyric = res[1].lyrics ?res[1].lyrics :null ;            \r\n            let id = (art && lyric) ?art.idArtist+(artist+song).toLowerCase() :null\r\n            setApiResponse({id,art,lyric,song});\r\n        };\r\n        getData();\r\n    }, [artist,song]);\r\n    \r\n    return (\r\n        /* ?(onDesktop && onDesktop. ?<RenderDataComponentDesktop data={apiResponse}/> :<RenderDataComponent data={apiResponse}/>) */\r\n        <div className={lightMode ?\"search-result light-mode\" :\"search-result\"}>            \r\n            <Header/>                        \r\n            {apiResponse             \r\n            ?(\r\n                (apiResponse.id) \r\n                ?(onDesktop ?<RenderDataComponentDesktop data={apiResponse}/> :<RenderDataComponent data={apiResponse}/>)\r\n                :<ErrorResult/>\r\n            )\r\n            \r\n            :(\r\n                <section className=\"loader-section\">\r\n                    <img src={loader} alt=\"loader\"/>\r\n                </section>\r\n            )}            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport { Home } from \"../components/Home\";\r\nimport { MyLIst } from \"../components/MyLIst\";\r\nimport { SearchResult } from \"../components/SearchResult\";\r\nimport { ContextFavoriteProvider } from \"../context/ContextFavorite\";\r\nimport { ContextResizeProvider } from \"../context/ContextResize\";\r\nimport { ModesContextProvider } from \"../context/modesContext\";\r\n\r\nexport const Router = () => {\r\n  //variable para controlar cual es el componente activo(en vista) y modificar el elemento link en el compoente HEADER\r\n  const [currentComponent, setCurrentComponent] = useState(\"home\");\r\n\r\n  return (\r\n    <HashRouter>\r\n      <ContextFavoriteProvider>\r\n      <ModesContextProvider>\r\n      <ContextResizeProvider>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Home setCurrentComponent={setCurrentComponent} currentComponent={currentComponent}/>} />\r\n          <Route exact path=\"/searchresult/:artist/:song\" element={<SearchResult/>} />\r\n          <Route path=\"/my-list/*\" element={<MyLIst setCurrentComponent={setCurrentComponent} currentComponent={currentComponent}/>}/>          \r\n        </Routes>\r\n      </ContextResizeProvider>\r\n      </ModesContextProvider>\r\n      </ContextFavoriteProvider>\r\n    </HashRouter>\r\n  );\r\n};\r\n","import './App.css';\nimport { Router } from './router/Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}